[global]
Date=today
GlobalDir=/home/zxw/data/MIS_yungang/cormis05/
;Tag=test_%(Date)s_
Tag=test_
Description="Describle in details"
;DebugLevel=3 # Level 0-5, the larger the more debug info.
DebugLevel=DEBUG

#2D histogram bins setting (cart coordinate frame)
XBins=200,-250,250
YBins=200,-250,250
ZBins=200,1,-1
ThetaBins=60,0,Pi()/2.
PhiBins=200,-Pi(),Pi()
ThetaXBins=200,-Pi()/2.,Pi()/2.
ThetaYBins=200,-Pi()/2.,Pi()/2.

DetInfoFile = det_yg.ini
TopoInfoFile = det_yg.ini
PhysModelFile = phys_model.ini

# StepNames = step_PrintOfflineTablesInfo, step_MergeHdf5, step_TimeSlice, step_SeparateFalseTrigger_Plane, step_FiltrateAllHit, step_TimeSlice2, step_FindBaseline, step_FindThreshold, step_DrawBaseLineList, step_DrawBaselineThreshold, step_CutWithThreshold, step_SubtractBaseline, step_FiltrateAllHit2, step_TimeSlice3, 

#StepNames = step_MergeHdf5,step_PrintOfflineTablesInfo,step_FiltrateAllHit2,step_AddKeyMeasTime,step_CalcHitPoints,step_DoAllStatistics,step_PrintAllCountsMeasTime,step_GetMeasRatio,step_GetMeasLeff,step_PrintTH2WithError, #step_TimeSlice,step_SeparateFalseTrigger_Plane,step_FiltrateAllHit,step_TimeSlice2,step_FindBaseline,step_FindThreshold,
#StepNames = step_GetMeasRatio,step_GetMeasLeff,step_PrintTH2WithError,
#StepNames = step_CutWithThreshold,step_SubtractBaseline,step_FindBarChannelRelation,step_ReplaceChannel,step_FiltrateAllHit2,step_TimeSlice3,
#StepNames = step_TimeSlice2,step_FindBaseline,step_FindThreshold,step_DrawBaseLineList,step_DrawBaselineThreshold,step_CutWithThreshold,step_SubtractBaseline,step_FindBarChannelRelation,step_ReplaceChannel,step_FiltrateAllHit2,step_TimeSlice3,step_AddKeyMeasTime,step_CalcHitPoints,step_DoAllStatistics,step_PrintAllCountsMeasTime,
#StepNames = step_DoAllStatistics,step_PrintAllCountsMeasTime,step_GetMeasRatio,step_GetMeasLeff,step_PrintTH2WithError,
#StepNames = step_GetMeasRatio,step_GetMeasLeff,
StepNames =  step_PrintOfflineTablesInfo,step_TimeSlice,step_SeparateFalseTrigger_Plane,step_FiltrateAllHit,step_TimeSlice2,step_FindBaseline,step_FindThreshold,step_DrawBaseLineList,step_DrawBaselineThreshold,step_CutWithThreshold,step_SubtractBaseline,step_FindBarChannelRelation,step_ReplaceChannel,step_FiltrateAllHit2,step_TimeSlice3,step_AddKeyMeasTime,step_CalcHitPoints,step_DoAllStatistics,step_PrintAllCountsMeasTime,

# 打印数据信息
[[step_PrintOfflineTablesInfo]]
OutDir = printDatabaseInfo
Filter = PrintOfflineTablesInfo
    [[[kwargs]]]
    Input.Hdf5Dir = data
    Output.FileName = originData.csv

# 合并同类数据文件
[[step_MergeHdf5]]
OutDir = dataframeProcessing
Filter = MergeHdf5
     [[[kwargs]]]
     Input.Hdf5Dir = dataframeProcessing
     Input.Hdf5Names = reChn_subBl_cutThre_allHit_sep_tmpData23,reChn_subBl_cutThre_allHit_sep_tmpData25,reChn_subBl_cutThre_allHit_sep_tmpData26, # files in which dataframe will be merged
     Output.Hdf5Name = reChn_subBl_cutThre_allHit_sep_tmpData32.h5

# 时间切片、检查数据
[[step_TimeSlice]]
OutDir = timeSlice
Filter = TimeSlice
     [[[kwargs]]]
     Input.Hdf5Dir = data
     Input.Hdf5Names = tmpData32,
     #Input.Hdf5Names = cutThre_allHit_divFT_tmpData326,
     Input.TimeIntervals = 0.5d # slice width: 1 day
     Input.CheckFactor = 5 # levels of tolerance for counts fluctuate
     Input.IfPrint = True # if print to pdf file
     Input.DrawOptions = TH1F:histe, # if to print pdf file, draw TH1F with option "histe"
     # Output.RootNames = timeSlice_tmpData3219_merge,

# 去除误触发、删除4道以上并排数据
[[step_SeparateFalseTrigger_Plane]]
OutDir = dataframeProcessing
Filter = SeparateFalseTrigger_Plane
    [[[kwargs]]]
    Input.Hdf5Dir = data
    Input.Hdf5Names = tmpData32,
    #Output.Hdf5Names = divFT_tmpData32.h5

# 做符合：保留所有Board都被触发的事件
[[step_FiltrateAllHit]]
OutDir = dataframeProcessing
Filter = FiltrateAllHit
    [[[kwargs]]]
    Input.CheckContinueTrigger = False
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = sep_tmpData32,

# 时间切片、检查数据
[[step_TimeSlice2]]
OutDir = timeSlice
Filter = TimeSlice
     [[[kwargs]]]
     Input.Hdf5Dir = dataframeProcessing
     Input.Hdf5Names = allHit_sep_tmpData32,
     Input.TimeIntervals = 0.5d # slice width: 1 day
     Input.CheckFactor = 5 # levels of tolerance for counts fluctuate
     Input.IfPrint = True # if print to pdf file
     Input.DrawOptions = TH1F:histe, # if to print pdf file, draw TH1F with option "histe"
     # Output.RootNames = allHit_sep_tmpData3219_merge,

# 求基线
[[step_FindBaseline]]
OutDir = dataframeAnalyzer
Filter = FindBaseline
    [[[kwargs]]]
    Input.Hdf5Dir = data
    Input.Hdf5Names = cormis05_baseline_20240107,
    #Output.CsvNames = Hdf5Names.replace('.h5', '.csv'),
    #Output.RootNames = Hdf5Names.replace('.h5', '.root'),

# 求阈值
[[step_FindThreshold]]
OutDir = dataframeAnalyzer
Filter = FindThreshold
    [[[kwargs]]]
    Input.Hdf5Dir = data
    Input.Hdf5Names = tmpData32,
    Input.BaselineDir = dataframeAnalyzer
    Input.BaselineNames = cormis05_baseline_20240107_baseline.csv,
    Input.SmoothLevels = 2,
    Input.ADCOffset = 3
    # Output.CsvNames = Hdf5Names.replace('.h5', '.csv'),
    # Output.RootNames = Hdf5Names.replace('.h5', '.root'),

# 检查基线
[[step_DrawBaseLineList]]
OutDir = baseline
Filter = DrawBaselineList
    [[[kwargs]]]
    Input.BaselineDir = dataframeAnalyzer
    Input.BaselineCsvNames = cormis05_baseline_20240107_baseline.csv,
    Output.PdfName = baseline_20240107.pdf

# 检查基线阈值
[[step_DrawBaselineThreshold]]
OutDir = drawPrint
Filter = DrawBaselineThreshold
    [[[kwargs]]]
    Input.RootDir = dataframeAnalyzer
    Input.RootNames = tmpData32_threshold.root, # generated by 'FindThreshold'
    Input.BaselineDir = dataframeAnalyzer
    Input.BaselineNames = cormis05_baseline_20240107_baseline.csv,  # .csv file of baseline generated by 'FindBaseline'
    Input.ThresholdDir = dataframeAnalyzer
    Input.ThresholdNames = tmpData32_threshold.csv, # .csv file of threshold generated by 'FindThreshold'
    Output.PDFNames = # default as RootName.replace('.root', '.pdf')

# 卡阈值
[[step_CutWithThreshold]]
OutDir = dataframeProcessing
Filter = CutWithThreshold
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = allHit_sep_tmpData32,
    #Input.Hdf5Names = allHit_divFT_tmpData326,
    Input.ThresholdDir = dataframeAnalyzer
    Input.ThresholdNames = cormis05_baseline_20240107_baseline.csv, # .csv file of threshold generated by 'FindThreshold'
    #Input.ThresholdNames = tmpData326_threshold.csv,

# 减基线
[[step_SubtractBaseline]]
OutDir = dataframeProcessing
Filter = SubtractBaseline
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = cutThre_allHit_sep_tmpData32,
    #Input.Hdf5Names = cutThre_allHit_divFT_tmpData326,
    Input.BaselineDir = dataframeAnalyzer
    Input.BaselineNames = cormis05_baseline_20240107_baseline.csv,
    #Input.BaselineNames = baseline_0702_baseline.csv,
    # Output.Hdf5Names = subBl_tmpData3219,

# 自动生成/手动撰写闪烁体和通道对应关系
[[step_FindBarChannelRelation]]
OutDir = detInfo
Filter = FindBarChannelRelation
    [[[kwargs]]]
    Input.Hdf5Dir = data
    Input.Hdf5Names = tmpData32,
    #Input.Hdf5Names = tmpData326,
    # Output.CsvNames = Hdf5Names.replace('.h5', '.csv')

# 替换通道
[[step_ReplaceChannel]]
OutDir = dataframeProcessing
Filter = ReplaceChannel
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = subBl_cutThre_allHit_sep_tmpData32,
    Input.BarChannelRelationNames = ./detInfo/rech_cormis05.csv,
    Output.Hdf5Names = reChn_subBl_cutThre_allHit_sep_tmpData32,
    #Input.Hdf5Names = subBl_cutThre_allHit_divFT_tmpData326,
    #Input.BarChannelRelationNames = ./detInfo/tmpData326.csv,
    #Output.Hdf5Names = reChn_subBl_cutThre_allHit_divFT_tmpData326,

# 符合+相邻触发
[[step_FiltrateAllHit2]]
OutDir = dataframeProcessing1
Filter = FiltrateAllHit
    [[[kwargs]]]
    Input.CheckContinueTrigger = True
    Input.Hdf5Dir = dataframeProcessing
    #Input.Hdf5Names = reChn_subBl_cutThre_allHit_divFT_tmpData324,reChn_subBl_cutThre_allHit_divFT_tmpData325,reChn_subBl_cutThre_allHit_divFT_tmpData326,
    Input.Hdf5Names = reChn_subBl_cutThre_allHit_sep_tmpData32.h5,
    # Output.Hdf5Names = divFT_allHit_tmpData3219_merge.h5,
    # Output.LoggerNames = ./log/divFT_allHit_tmpData3219_merge.log,

# 时间切片检查数据
[[step_TimeSlice3]]
OutDir = timeSlice
Filter = TimeSlice
     [[[kwargs]]]
     Input.Hdf5Dir = dataframeProcessing1
     #Input.Hdf5Names = allHit_reChn_subBl_cutThre_allHit_divFT_tmpData324,allHit_reChn_subBl_cutThre_allHit_divFT_tmpData325,allHit_reChn_subBl_cutThre_allHit_divFT_tmpData326,
     Input.Hdf5Names = allHit_reChn_subBl_cutThre_allHit_sep_tmpData32,
     Input.TimeIntervals = 0.5d # slice width: 1 day
     Input.CheckFactor = 5 # levels of tolerance for counts fluctuate
     Input.IfPrint = True # if print to pdf file
     Input.DrawOptions = TH1F:histe, # if to print pdf file, draw TH1F with option "histe"
     # Output.RootNames = allHit_sep_tmpData3219_merge,


[[step_AddKeyMeasTime]]
Filter = AddKeyMeasTime
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing1
    Input.Hdf5Names = allHit_reChn_subBl_cutThre_allHit_sep_tmpData32,#reChn_tmpData_c02,reChn_tmpData_c03,reChn_tmpData_c04,

[[step_CalcHitPoints]]
OutDir = hitPoints
Filter = CalcHitPoints
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing1
    Input.Hdf5Names = allHit_reChn_subBl_cutThre_allHit_sep_tmpData32.h5,
    Input.DetNames = D8,
    Input.CalcMultiTriggers = True
    Input.UseDetMeasTime = False
    # Output.RootNames =

[[step_DoAllStatistics]]
OutDir = muonStatistics
Filter = DoAllStatistics
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Input.TreeRootNames = allHit_reChn_subBl_cutThre_allHit_sep_tmpData32.root,#reChn_tmpData_c02.root,reChn_tmpData_c03.root,reChn_tmpData_c04.root,
    Input.DetNames = D8,#D2,D3,D4,
    Input.SolidAngleName = size_of_angle.root
    Input.PrintPdf = True
    Input.DrawOptions = H1F:histe,#TH1F:histe,TH1F:histe,TH1F:histe,
    Output.StatsNames = stats_cormis05_tmpData32.root ,#stats_cormis02.root,stats_cormis03.root,stats_cormis04.root,

[[step_PrintAllCountsMeasTime]]
OutDir = PrintAllCountsMeasTime
Filter = PrintAllCountsMeasTime
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Output.CsvName = cormis05Data.csv
    
[[step_CalcHitPoints_NPlanes]]
OutDir = hitPoints_NPlanes
Filter = CalcHitPoints_NPlanes
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing1
    Input.Hdf5Names = allHit_reChn_subBl_cutThre_allHit_sep_tmpData32.h5,#c01,c03,c04,#c01_2,#c02_1,c02_2,c03_1,c03_2,c04_1,c04_2,
    Input.DetNames = D8,#D1,D3,D4,#D1,#D2,D2,D3,D3,D4,D4,
    Input.CalcMultiTriggers = True
    Input.UseDetMeasTime = False

[[step_GetMeasRatio]]
OutDir = getMeasRatioLeff
Filter = GetMeasRatio
    [[[kwargs]]]
    Input.TargetRootDir = muonStatistics
    Input.TargetRootNames = stats_cormis05_tmpData32.root,
    Input.BackgroundRootDir = muonStatistics
    Input.BackgroundRootNames = stats_cormis05_tmpData3.root,
    Input.StatsCutNames = TOT,
    Output.RatioRootNames = ratio_cormis05_tmpData32_D8.root,
    # Output.LogNames = RatioRootNames.replace('.root', '.log')

[[step_GetMeasLeff]]
OutDir = getMeasRatioLeff
Filter = GetMeasLeff
    [[[kwargs]]]
    Input.RatioRootDir = getMeasRatioLeff
    Input.RatioRootNames = ratio_cormis05_tmpData32_D8.root,
    Input.PhysModelName = P1
    Input.Epsilon = 0.0003
    Output.LeffRootNames = leff_P1_cormis05_tmpData32_D8.root,
    # Output.LogNames = LeffRootNames.replace('.root', '.log')

[[step_PrintTH2WithError]]
OutDir = getMeasRatioLeff
Filter = PrintTH2WithError
    [[[kwargs]]]
    Input.RootDir = getMeasRatioLeff
    Input.RootNames = ratio_cormis05_tmpData32.root,
    Input.HistNames = htheta_phi,
    Input.DrawOption = 4
    Output.PDFName =  cormis05_tmpData32.pdf

