[global]
Date=today
GlobalDir=/home/zxw/data
;Tag=test_%(Date)s_
Tag=test_
Description="Describle in details"
;DebugLevel=3 # Level 0-5, the larger the more debug info.
DebugLevel=DEBUG

#2D histogram bins setting (cart coordinate frame)
XBins=200,-250,250
YBins=200,-250,250
ZBins=200,1,-1
ThetaBins=60,0,Pi()/2.
PhiBins=200,-Pi(),Pi()
ThetaXBins=200,-Pi()/2.,Pi()/2.
ThetaYBins=200,-Pi()/2.,Pi()/2.

DetInfoFile = det_58mamian.ini
TopoInfoFile = topo_58mamian.ini
PhysModelFile = phys_model.ini

StepNames = step_FindBaseline,

[[step_PrintTree2Csv]]
OutDir = printTree2Csv
Filter = PrintTree2Csv
    [[[kwargs]]]
    Input.TreeRootName = rayAnalyzer/test_sample_meas.root
    Input.TreeName =
    Input.VariableNames = DetID,DetX,DetY,DetZ,Theta,Phi,MeasRatio,MeasRatio
    Output.CsvName = test_obs.dat

[[step_SampleFromMeasFlux]]
OutDir = rayAnalyzer
Filter = SampleFromMeasFlux
    [[[kwargs]]]
    Input.MeasTreeRootDir = rayAnalyzer
    Input.MeasTreeRootNames = test_ray_meas_ratio.root,test_ray_meas_target_flux.root,test_ray_meas_background_flux.root
    Input.PhysModelName = P1
    Input.Epsilon = 0.0003
    Output.TreeRootName = test_sample_meas.root

[[step_SampleFromSimFlux]]
OutDir = rayAnalyzer
Filter = SampleFromSimFlux
    [[[kwargs]]]
    Input.SimTreeRootDir = rayAnalyzer
    Input.SimTreeRootNames =
    Input.PhysModelName = P1
    Input.Epsilon = 0.0003
    Output.TreeRootName = test_sample_sim.root

[[step_CopyTreeWithSelection]]
OutDir = rayAnalyzer
Filter = CopyTreeWithSelection
    [[[kwargs]]]
    Input.Selection = DetID==1 && TMath::Abs(MeasRatio - SimRatio) < 0.03
    Input.TreeRootDir = rayAnalyzer
    Input.TreeRootNames = test_ray_sim_ratio.root,test_ray_meas_ratio.root
    Output.TreeRootName = test_selection.root

[[step_MergeTreeBranch]]
OutDir = rayAnalyzer
Filter = MergeTreeBranch
    [[[kwargs]]]
    Input.TreeRootDir = rayAnalyzer
    Input.TreeRootNames = test_ray_sim_ratio.root,test_ray_meas_ratio.root
    Output.TreeRootName = test_selection.root

[[step_FillHistsIntoTree]]
OutDir = rayAnalyzer
Filter = FillHistsIntoTree
    [[[kwargs]]]
    Input.DetNames = D1,D2
    Input.MeasRatioRootNames = getMeasRatioLeff/ratio_cormis01.root,getMeasRatioLeff/ratio_cormis02.root
    # Input.MeasRatioHistName =
    Input.SimRatioRootNames = leff2res/ZZG80604_265_P1_Res_D1.root,leff2res/ZZG80604_265_P1_Res_D2.root
    # Input.SimRatioHistName =
    Input.MeasLeffRootNames = getMeasRatioLeff/leff_P1_cormis01.root,getMeasRatioLeff/leff_P1_cormis02.root
    # Input.MeasLeffHistName =
    Input.SimLeffRootNames = ltopo2Leff/ZZG80604_265_Leff_D1.root,ltopo2Leff/ZZG80604_265_Leff_D2.root
    # Input.SimLeffHistName =
    Input.TargetStatsRootNames = muonStatistics/stats_cormis01_merge111314_Well0.root,muonStatistics/stats_cormis02_merge14-38_Well0.root
    # Input.TargetStatsHistName =
    Input.BackgroundStatsRootNames = muonStatistics/stats_cormis01_merge111314_Well0.root,muonStatistics/stats_cormis02_merge334_BG0.root
    # Input.BackgroundStatsHistName =
    Input.TargetSimFluxRootNames =
    # Input.TargetSimFluxHistName =
    Input.BackgroundSimFluxRootNames =
    # Input.BackgroundSimFluxHistName =
    Input.CoordName = thetaphi
    Output.TreeRootName = test_ray.root

[[step_TargetBackgroundSlice]]
OutDir = slice2D
Filter = TargetBackgroundSlice
    [[[kwargs]]]
    Input.MeasTargetStatsName = muonStatistics/stats_cormis01_merge111314_Well0.root
    Input.MeasBackgroundStatsName = muonStatistics/stats_cormis01_tmpData3.root
    Output.CoordNames =
    Output.Slice2DName = test.root

[[step_MeasSimLeffSlice]]
OutDir = slice2D
Filter = MeasSimLeffSlice
    [[[kwargs]]]
    Input.MeasLeffRootName = getMeasRatioLeff/leff_P1_cormis04.root
    Input.SimLeffRootNames = ltopo2Leff/ZZG80604_265_Leff_D4.root,
    Output.CoordNames =
    Output.SliceName = testm.root

[[step_MeasSimRatioSlice]]
OutDir = slice2D
Filter = MeasSimLeffSlice
    [[[kwargs]]]
    Input.MeasRatioRootName = getMeasRatioLeff/leff_P1_cormis04.root
    Input.SimRatioRootNames = leff2res/ZZG80604_265_Leff_D4.root,
    Output.CoordNames =
    Output.SliceName = testr.root

[[step_CalcSignificance]]
OutDir = calcSignificance
Filter = CalcSignificance
    [[[kwargs]]]
    Input.Expressions = (F1-F2)/Err(F1),
    Input.F1RootName = getMeasRatioLeff/ratio_cormis01.root
    Input.F1HistNames = htheta_phi,hthetax_thetay
    Input.F2RootName = leff2res/ZZG80604_265_P1_Res_D1.root
    Input.F2HistNames = htheta_phi,hthetax_thetay
    Output.SigRootNames = sig_cormis01_ratio.root,


[[step_Slice2D]]
OutDir = slice2D
Filter = Slice2D
    [[[kwargs]]]
    Input.MeasTargetStatsName = muonStatistics/stats_cormis01_merge111314_Well0.root
    Input.MeasBackgroundStatsName = muonStatistics/stats_cormis01_tmpData3.root
    Input.MeasRatioRootName = getMeasRatioLeff/ratio_cormis01.root
    Input.SimRatioRootNames = leff2res/ZZG80604_265_P1_Res_D1.root,
    Input.MeasLeffRootName = getMeasRatioLeff/leff_P1_cormis01.root
    Input.SimLeffRootNames = ltopo2Leff/ZZG80604_265_Leff_D1.root,
    Input.SigRootNames = calcSignificance/sig_cormis01_ratio.root,
    # Input.StatsCutName =
    Output.CoordNames =
    Output.Slice2DName = slice_cormis01.root

[[step_CompareHistList]]
OutDir = compareHistList
Filter = CompareHistList
    [[[kwargs]]]
    Input.HistRootDir = muonStatistics
    Input.HistRootNames = stats_cormis02_merge334_BG0.root,stats_cormis03_tmpData13.root
    Input.HistNames = htheta_phi_TOT,htheta_phi_TOT
    Input.Scales = 1
    Output.CompareRootName = test_compare_cormis02_cormis03.root

[[step_PrintAllCountsMeasTime]]
OutDir = hitPoints
Filter = PrintAllCountsMeasTime
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Output.CsvName = hitPoints.csv

[[step_GetMeasRatio]]
OutDir = getMeasRatioLeff
Filter = GetMeasRatio
    [[[kwargs]]]
    Input.TargetRootDir = muonStatistics
    Input.TargetRootNames = stats_cormis01_merge111314_Well0.root,
    Input.BackgroundRootDir = muonStatistics
    Input.BackgroundRootNames = stats_cormis01_tmpData44.root,
    Input.StatsCutNames = TOT,
    Output.RatioRootNames = ratio_cormis01.root,
    # Output.LogNames = RatioRootNames.replace('.root', '.log')

[[step_GetMeasLeff]]
OutDir = getMeasRatioLeff
Filter = GetMeasLeff
    [[[kwargs]]]
    Input.RatioRootDir = getMeasRatioLeff
    Input.RatioRootNames = ratio_cormis01.root,
    Input.PhysModelName = P1
    Input.Epsilon = 0.0003
    Output.LeffRootNames = leff_P1_cormis01.root,
    # Output.LogNames = LeffRootNames.replace('.root', '.log')


[[step_DoAllStatistics]]
OutDir = muonStatistics
Filter = DoAllStatistics
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Input.TreeRootNames = allHit_reChn_subBl_cutThre_allHit_sep_cormis01_tmpData12.root,
    Input.DetNames = D1,
    Input.SolidAngleName = size_of_angle.root
    Input.PrintPdf = True
    Input.DrawOptions = TH1F:histe,
    Output.StatsNames = stats_cormis01_tmpData12.root,

[[step_GetDetAcceptance]]
OutDir = detInfo
Filter = GetDetAcceptance
    [[[kwargs]]]
    Input.DetNames = D1,D2,D3,D4,D5,D6
    Output.Prefix = accpt_

[[step_GetSolidAngle]]
OutDir = detInfo
Filter = GetSolidAngle
     [[[kwargs]]]
     Input.NRand = 5e8
     Output.FileName = size_of_angle.root

[[step_Topo2Ltopo]]
OutDir = topo2Ltopo
Filter = Topo2Ltopo
    [[[kwargs]]]
    Input.Pool = 4
    Input.DetNames = D1,D2,D3,D4,D5,D6
    Input.TopoNames = FKD,
    # Output.Files are named automatically by DetNames and TopoNames

[[step_Ltopo2Leff]]
OutDir = ltopo2Leff
Filter = Ltopo2Leff
    [[[kwargs]]]
    Input.DetNames = D1,D2,D3,D4,D5,D6
    Input.LtopoDir = topo2Ltopo
    Input.Expressions = 1.89*SF-0.89*DMD-1.89*FKD,
    Output.Prefixes = paper_zh,

[[step_PrintSimObsData]]
OutDir = ltopo2Leff
Filter = PrintSimObsData
    [[[kwargs]]]
    Input.DetNames = D1,D2,D3,D4,D5,D6
    Input.LeffDir = ltopo2Leff
    Input.LeffPrefix = paper_zh
    Input.AngleCoors = thetaxy,
    Input.LeffUncertaintyLevel = 0.05
    Output.FileName = paper_zh.dat

[[step_Leff2Res]]
OutDir = leff2res
Filter = Leff2Res
    [[[kwargs]]]
    Input.DetNames = D1,D2,D3,D4,D5,D6
    Input.LeffDir = ltopo2Leff
    Input.Prefixes = test1,
    Input.PhysModelNames = P1,
    Input.SolidAngleFile = ./detInfo/a_size_of_angle.root
    # (Cannot define)Output.Prefixes = test1_P1,

[[step_PrintDatabaseInfo]]
OutDir = printDatabaseInfo
Filter = PrintDevicesInfo
    [[[kwargs]]]
    Output.DeciveInfoFile = device_info.csv

[[step_PrintOnlineTablesInfo]]
OutDir = printDatabaseInfo
Filter = PrintOnlineTablesInfo
    [[[kwargs]]]
    Input.serialNumbers = 14XWDA900XFG21L0255,420056L110802104172,14XWDA900XFG21L0340,14XWDA900XFG21L0036,14XWDA900XFG21L0404,14XWDA900XFG21L0252,14XWDA900XFG21L0003
    Input.serialNames = cormis03,cormis05_new,cormis01,cormis02,cormis04,cormis05,cormis06
    Output.Prefix = 9-13

[[step_PrintOfflineTablesInfo]]
OutDir = printDatabaseInfo
Filter = PrintOfflineTablesInfo
    [[[kwargs]]]
    Input.Hdf5Dir = cormisData
    Output.FileName = cormisData.csv

[[step_DownloadHdf5]]
OutDir = downloadHdf5_9-14
Filter = DownloadHdf5
    [[[kwargs]]]
    Input.TablesInfoFile = ./printDatabaseInfo/h5_table.csv
    Input.PageCapacity = 100000
    # Output.Hdf5Names is serialNames_tmpData*.h5

[[step_FindBarChannelRelation]]
OutDir = detInfo
Filter = FindBarChannelRelation
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Names = cormis01_tmpData14,
    # Output.CsvNames = Hdf5Names.replace('.h5', '.csv')

[[step_SelectWithCondition]]
OutDir = dataframeProcessing
Filter = SelectWithCondition
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Name = cormis01_tmpData12
    Input.StartTime = 2022-06-08 12:07:18
    Input.EndTime = 2022-06-08 12:08:18
    Input.StartTrigger = 2
    Input.EndTrigger =47
    Output.Hdf5Name = time__cormis_tmpData12

[[step_PrintHdf5ToFile]]
OutDir = downloadHdf5
Filter = PrintHdf5ToFile
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Name = cormis01_tmpData11
    Input.PageCapacity = 500
    Output.FileName = cormis01_tmpData11.txt

[[step_ReplaceChannel]]
OutDir = dataframeProcessing
Filter = ReplaceChannel
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Name = allHit_cormis01_tmpData14
    Input.BarChannelRelation = ./detInfo/cormis01_tmpData14.csv
    Output.Hdf5Name = reChn_cormis01_tmpData14

[[step_FiltrateAllHit]]
OutDir = dataframeProcessing
Filter = FiltrateAllHit
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Names = cormis01_tmpData12,
    Output.Hdf5Names = allHit_cormis01_tmpData12,
    Output.LoggerNames = ./log/cormis01_tmpData12_FiltrateAllHit.log,

[[step_DeleteGivenChannels]]
OutDir = dataframeProcessing
Filter = DeleteGivenChannels
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Name = cormis01_tmpData14
    Input.DeleteChannelNumbers = 1:1,
    Output.Hdf5Name = delChn_cormis01_tmpData14

[[step_FindBaseline]]
OutDir = dataframeAnalyzer
Filter = FindBaseline
    [[[kwargs]]]
    Input.Hdf5Dir = downloadHdf5
    Input.Hdf5Names = baseline_cormis03,
    # Output.CsvNames = Hdf5Names.replace('.h5', '.csv'),
    # Output.RootNames = Hdf5Names.replace('.h5', '.root'),

[[step_FindThreshold]]
OutDir = dataframeAnalyzer
Filter = FindThreshold
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = allHit_cormis01_tmpData11,allHit_cormis01_tmpData12,allHit_cormis01_tmpData13,allHit_cormis01_tmpData14,allHit_cormis02_tmpData38,allHit_cormis02_tmpData37,allHit_cormis02_tmpData36,allHit_cormis02_tmpData31,allHit_cormis02_tmpData19,allHit_cormis02_tmpData37,allHit_cormis03_tmpData17,allHit_cormis03_tmpData22,allHit_cormis03_tmpData21,allHit_cormis03_tmpData13,allHit_cormis03_tmpData14,allHit_cormis04_tmpData24,allHit_cormis04_tmpData22,allHit_cormis05_new_tmpData6,allHit_cormis05_new_tmpData1,allHit_cormis06_tmpData74,allHit_cormis06_tmpData65
    Input.BaselineNames = dataframeAnalyzer/cormis01_bl.csv,dataframeAnalyzer/cormis01_bl.csv,dataframeAnalyzer/cormis01_bl.csv,dataframeAnalyzer/cormis01_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis02_bl.csv,dataframeAnalyzer/cormis03_bl.csv,dataframeAnalyzer/cormis03_bl_new.csv,dataframeAnalyzer/cormis03_bl_new.csv,dataframeAnalyzer/cormis03_bl.csv,dataframeAnalyzer/cormis03_bl.csv,dataframeAnalyzer/cormis04_bl_new.csv,dataframeAnalyzer/cormis04_bl_new.csv,dataframeAnalyzer/cormis05_bl.csv,dataframeAnalyzer/cormis05_bl.csv,dataframeAnalyzer/cormis06_bl_new.csv,dataframeAnalyzer/cormis06_bl.csv
    Input.SmoothLevels = 2,
    # Output.CsvNames = Hdf5Names.replace('.h5', '.csv'),
    # Output.RootNames = Hdf5Names.replace('.h5', '.root'),

[[step_ReplaceCsvChannel]]
OutDir = dataframeAnalyzer
Filter = ReplaceCsvChannel
    [[[kwargs]]]
    Input.CsvNames = dataframeAnalyzer/cormis01_tmpData12_baseline.csv,dataframeAnalyzer/cormis01_tmpData14_threshold.csv
    Input.BarChannelRelation = ./detInfo/cormis01_tmpData14.csv
    Output.CsvNames = cormis01_tmpData12_RBaseline.csv,cormis01_tmpData12_RThreshold.csv

[[step_MergeHdf5]]
OutDir = dataframeProcessing
Filter = MergeHdf5
    [[[kwargs]]]
    Input.Hdf5Names = downloadHdf5/cormis01_tmpData14,downloadHdf5/cormis01_tmpData12
    Output.Hdf5Name = cormis01_merge

[[step_CutWithThreshold]]
OutDir = dataframeProcessing
Filter = CutWithThreshold
    [[[kwargs]]]
    Input.Hdf5Names = dataframeProcessing/allHit_cormis01_tmpData14,dataframeProcessing/allHit_cormis01_tmpData12
    Input.ThresholdNames = dataframeAnalyzer/cormis01_tmpData14_threshold.csv,dataframeAnalyzer/cormis01_tmpData12_threshold.csv
    Output.Hdf5Names = cutThre_cormis01_tmpData14, cutThre_cormis01_tmpData12

[[step_SubtractBaseline]]
OutDir = dataframeProcessing
Filter = SubtractBaseline
    [[[kwargs]]]
    Input.Hdf5Names = dataframeProcessing/allHit_cormis01_tmpData12,
    Input.BaselineNames = dataframeAnalyzer/cormis01_tmpData12_RBaseline.csv,
    Output.Hdf5Names = subBl_cormis01_tmpData12,

[[step_TimeSlice]]
OutDir = dataframeAnalyzer
Filter = TimeSlice
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = allHit_cormis01_tmpData11,
    Input.TimeIntervals = 1d
    #Output.RootNames = timeSlice_allHit_cormis01_tmpData12,


[[step_PrintTFile2PDF]]
OutDir = drawPrint
Filter = PrintTFile2PDF
    [[[kwargs]]]
    Input.RootDir = dataframeAnalyzer
    Input.RootNames = timeSlice_allHit_cormis01_tmpData12.root,
    Input.DrawOptions = TH1F:histe,
    Output.PDFNames =

[[step_DrawBaselineThreshold]]
OutDir = drawPrint
Filter = DrawBaselineThreshold
    [[[kwargs]]]
    Input.RootDir = dataframeAnalyzer
    Input.RootNames = allHit_cormis01_tmpData11_threshold.root,allHit_cormis01_tmpData12_threshold.root,allHit_cormis01_tmpData13_threshold.root,allHit_cormis01_tmpData14_threshold.root,allHit_cormis02_tmpData38_threshold.root,allHit_cormis02_tmpData37_threshold.root,allHit_cormis02_tmpData36_threshold.root,allHit_cormis02_tmpData31_threshold.root,allHit_cormis02_tmpData19_threshold.root,allHit_cormis02_tmpData37_threshold.root,allHit_cormis03_tmpData17_threshold.root,allHit_cormis03_tmpData22_threshold.root,allHit_cormis03_tmpData21_threshold.root,allHit_cormis04_tmpData24_threshold.root,allHit_cormis04_tmpData22_threshold.root,allHit_cormis05_new_tmpData6_threshold.root,allHit_cormis05_new_tmpData1_threshold.root,allHit_cormis06_tmpData74_threshold.root,allHit_cormis06_tmpData65.root
    Input.BaselineDir = dataframeAnalyzer
    Input.BaselineNames = cormis01_bl.csv,cormis01_bl.csv,cormis01_bl.csv,cormis01_bl.csv,cormis02_bl.csv,cormis02_bl.csv,cormis02_bl.csv,cormis02_bl.csv,cormis02_bl.csv,cormis02_bl.csv,cormis03_bl.csv,cormis03_bl_new.csv,cormis03_bl_new.csv,cormis04_bl_new.csv,cormis04_bl_new.csv,cormis05_bl.csv,cormis05_bl.csv,cormis06_bl_new.csv,cormis06_bl.csv
    Input.ThresholdDir = dataframeAnalyzer
    Input.ThresholdNames = allHit_cormis01_tmpData11_threshold.csv,allHit_cormis01_tmpData12_threshold.csv,allHit_cormis01_tmpData13_threshold.csv,allHit_cormis01_tmpData14_threshold.csv,allHit_cormis02_tmpData38_threshold.csv,allHit_cormis02_tmpData37_threshold.csv,allHit_cormis02_tmpData36_threshold.csv,allHit_cormis02_tmpData31_threshold.csv,allHit_cormis02_tmpData19_threshold.csv,allHit_cormis02_tmpData37_threshold.csv,allHit_cormis03_tmpData17_threshold.csv,allHit_cormis03_tmpData22_threshold.csv,allHit_cormis03_tmpData21_threshold.csv,allHit_cormis04_tmpData24_threshold.csv,allHit_cormis04_tmpData22_threshold.csv,allHit_cormis05_new_tmpData6_threshold.csv,allHit_cormis05_new_tmpData1_threshold.csv,allHit_cormis06_tmpData74_threshold.csv,allHit_cormis06_tmpData65_threshold.csv
    Output.PDFNames =


[[step_SeparateFalseTrigger_Plane]]
OutDir = dataframeProcessing
Filter = SeparateFalseTrigger_Plane
    [[[kwargs]]]
    Input.Hdf5Dir = dataframeProcessing
    Input.Hdf5Names = allHit_cormis01_tmpData11,
    Output.Hdf5Names = divFT_allHit_cormis01_tmpData11,

[[step_CalcHitPoints]]
OutDir = hitPoints
Filter = CalcHitPoints
    [[[kwargs]]]
    Input.Hdf5Dir = mergedFiles
    Input.Hdf5Names = cormis05_merge131_Well0.h5,
    Input.DetNames = D5,
    Input.CalcMultiTriggers = True
    Input.UseDetMeasTime = False
    # Output.RootNames =

[[step_TargetBackgroundSlice]]
OutDir = slice2D
Filter = TargetBackgroundSlice
    [[[kwargs]]]
    Input.MeasTargetStatsName = muonStatistics/stats_cormis01_merge111314_Well0.root
    Input.MeasBackgroundStatsName = muonStatistics/stats_cormis01_tmpData3.root
    Output.CoordNames =
    Output.SliceName = test.root

[[step_MeasSimLeffSlice]]
OutDir = slice2D
Filter = MeasSimLeffSlice
    [[[kwargs]]]
    Input.MeasLeffRootName = getMeasRatioLeff/leff_P1_cormis04.root
    Input.SimLeffRootNames = ltopo2Leff/ZZG80604_265_Leff_D4.root,
    Output.CoordNames =
    Output.SliceName = testm.root

[[step_Slice2D]]
OutDir = slice2D
Filter = Slice2D
    [[[kwargs]]]
    Input.MeasTargetStatsName = muonStatistics/stats_cormis01_merge111314_Well0.root
    Input.MeasBackgroundStatsName = muonStatistics/stats_cormis01_tmpData3.root
    Input.MeasRatioRootName =
    Input.SimRatioRootNames =
    Input.MeasLeffRootName =
    Input.SimLeffRootNames =
    Input.SigRootNames =
    # Input.StatsCutName =
    Output.CoordNames =
    Output.Slice2DName = test.root

[[step_CompareHistList]]
OutDir = compareHistList
Filter = CompareHistList
    [[[kwargs]]]
    Input.HistRootDir = muonStatistics
    Input.HistRootNames = stats_cormis02_merge334_BG0.root,stats_cormis03_tmpData13.root
    Input.HistNames = htheta_phi_TOT,htheta_phi_TOT
    Input.Scales = 1
    Output.CompareRootName = test_compare_cormis02_cormis03.root

[[step_CalcSignificance]]
OutDir = calcSignificance
Filter = CalcSignificance
    [[[kwargs]]]
    Input.Expressions = (F1-F2)/Err(F1&F2),
    Input.F1RootName = muonStatistics/stats_cormis02_merge334_BG0.root
    Input.F1HistNames = htheta_phi_TOT,
    Input.F2RootName = muonStatistics/stats_cormis03_tmpData13.root
    Input.F2HistNames = htheta_phi_TOT,
    Output.SigRootNames = sig_cormis02BG_cormis03BG.root,

[[step_PrintAllCountsMeasTime]]
OutDir = hitPoints
Filter = PrintAllCountsMeasTime
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Output.CsvName = hitPoints.csv

[[step_GetMeasRatio]]
OutDir = getMeasRatioLeff
Filter = GetMeasRatio
    [[[kwargs]]]
    Input.TargetRootDir = muonStatistics
    Input.TargetRootNames = stats_cormis04_select_merge2224_Well0.root,
    Input.BackgroundRootDir = muonStatistics
    Input.BackgroundRootNames = stats_cormis04_tmpData6.root,
    Input.StatsCutNames = TOT,
    Output.RatioRootNames = ratio_cormis04.root,
    # Output.LogNames = RatioRootNames.replace('.root', '.log')

[[step_GetMeasLeff]]
OutDir = getMeasRatioLeff
Filter = GetMeasLeff
    [[[kwargs]]]
    Input.RatioRootDir = getMeasRatioLeff
    Input.RatioRootNames = ratio_cormis04.root,
    Input.PhysModelName = P1
    Input.Epsilon = 0.00005
    Output.LeffRootNames = leff_P1_cormis04.root,
    # Output.LogNames = LeffRootNames.replace('.root', '.log')


[[step_DoAllStatistics]]
OutDir = muonStatistics
Filter = DoAllStatistics
    [[[kwargs]]]
    Input.TreeRootDir = hitPoints
    Input.TreeRootNames = allHit_reChn_subBl_cutThre_allHit_sep_cormis06_tmpData61.root,
    Input.DetNames = D1,
    Input.SolidAngleName = size_of_angle.root
    Input.PrintPdf = True
    Input.DrawOptions = TH1F:histe,
    Output.StatsNames = stats_cormis06_tmpData61.root,
